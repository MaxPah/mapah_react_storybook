.pgf-title-image-cta {
    position: relative;
}

.pgf-title-image-cta--title {
    position: absolute;
    margin: 50px;
    font-family: Ubuntu, sans-serif;
    color: #ffffff;
    opacity: 0.6;
    font-weight: 700;
    font-size: 1.5rem;
}

.pgf-title-image-cta--image {

}

.pgf-title-image-cta--cta {
    position: absolute;
    bottom: 0;
    left: 0;
    margin: 50px;
    font-family: Ubuntu, sans-serif;
    color: #ffffff;
    font-weight: 700;
    font-size: 1.5rem;
}
.pgf-title-image-cta--cta a {
    text-decoration: none;
    color: #ffffff;
    border-bottom: solid 2px #ffffff;
    padding: 5px 15px;
    transition: all 2s;
}

.pgf-title-image-cta--cta a:hover {
    border: solid 2px #ffffff;
    opacity: 0.8;
}

/* SEE : https://codepen.io/thomasvaeth/pen/JKxRNk */
/* // Mixin for drawing button with optional argument for width, padding, and time
@mixin btn-draw($color, $color-hov, $width: 1px, $padding: 0.5em, $time: 0.2s) {
  position: relative;

  display: inline-block;

  color: $color;
  border-bottom: $width solid $color;
  cursor: pointer;
  overflow: hidden;
  transition: color $time ease-in-out, background-color $time ease-in-out;

  &:after {
    content: '';
    position: absolute;
    right: 0;
    bottom: 0;

    height: 100%;
    width: $width;

    background: $color;
    transform: translateY(100%);
    transition: transform $time ease-in-out;
    transition-delay: $time * 3;
  }

  > span {
    position: relative;

    display: block;
    padding: $padding;

    color: inherit;

    &:before, 
    &:after {
      content: '';
      position: absolute;
      left: 0;
      top: 0;

      background: $color;
      transition: transform $time ease-in-out;
    }

    &:before {
      height: $width;
      width: 100%;
      
      transform: translateX(100%);
      transition-delay: $time * 2;
    }

    &:after {
      height: 100%;
      width: $width;

      transform: translateY(-100%);
      transition-delay: $time;
    }
  }

  &:hover:after, 
  &:hover > span:before, 
  &:hover > span:after {
    transform: translate(0, 0);
  }

  &:hover:after {
    transition-delay: 0s;
  }

  &:hover > span:before {
    transition-delay: $time;
  }

  &:hover > span:after {
    transition-delay: $time * 2;
  }

  &:hover {
    color: $color-hov;
    background-color: $color;
    transition-delay: $time * 3;
  }
}

a {
  text-decoration: none;
}

.btn-draw {
  @include btn-draw(#324577, #e4e4e2, 2px);
} */